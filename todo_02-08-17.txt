Таблица User, поля:

	steamID - идентификатор SteamID64
  groupId - идентификатор группы в которую нужно пригласить пользователя

	friendship state
		0 - приглашение не отправлено
		1 - приглашение отправлено
		2 - друг
		3 - приглашение отклонено
		4 - удалил из друзей

	chat state
		0 - сообщения не отправлялись
		1 - отправлено приветствие
		2 - пользователь что-то написал (ответил на приветствие, написал первым - не важно)
		3 - отправлено приглашение в группу и сообщение о призах
		4 - отправлено сообщение "ожидайте подарка"

	group state
		0 - не в группе
		1 - состоит в группе

	send thanks state
		0 - подарок отправлять не нужно (пользователь еще не вступил в группу)
		1 - нужно поблагодарить и написать "Ожидайте подарка"
    2 - подарок отправлен
		
	botAccountName - имя бота, добавившего пользователя в друзья
	lastInvintationDate - дата отправки добавления пользователя в друзья
___________________________________________________________________________________________________________
Хост-приложение

  - Инициализация новых записей в БД из файла 
      запись инициируется парой значений
         steamId - groupId

  - Запуск ботов с параметрами
    bot1 - login, paswword, mail, chat_config, friend_invitation_timeout

    https://stackoverflow.com/questions/18862214/start-another-node-application-using-node-js
  
  - Передача Steam Guard кодов ботам

  - Проверка вступления приглашенных пользователей в группу
    - Проверять, кто вступил в группу
      - При запуске
      - каждые 24 часа https://www.npmjs.com/package/node-cron    
    - Устанавливать соответствующий groupState
    - Хранить группы с которыми работают боты в конфиге

  - SQL запросы для:
      удаления записей из таблицы User по дате добавления записи
      проверки приглашенных в группу
      проверки вступивших в группу
      получения логов

  - Завершать ботов при падении хоста
    https://stackoverflow.com/questions/5541288/detect-when-parent-process-exits

  - Писать в таблицу Logs основные события
___________________________________________________________________________________________________________
Бот

  + Параметры запуска бота
      'login'                     - логин аккаунта steam
      'password'                  - пароль от аккаунта steam
      'chat_config'               - конфиг с фразами и таймаутами "чтения", "печатания", отправки
                                    !ВНИМАНИЕ: конфиг предполагается уникальный для каждой группы
                                    в принципе можно сделать общий, но, соответственно, фразы придется
                                    также писать общие
                                    НАПРИМЕР: не "Мы дарим подарки вступите в группу SuperCS:GO,
                                                  чтобы получить приз"

                                              а  "Мы дарим подарки вступите в группу вступите в группу,
                                                 чтобы получить приз"
      
      'repeat_invitation_timeout' - количество времени В МИЛЛИСЕКУНДАХ, которое должно пройти, прежде чем бот повторно
                                    попробует добавить в друзья пользователя
                                    слишком давно приглашенного/ удалившегося/ отказавшегося
      
      'online_action_timeout'     - таймаут В МИЛЛИСЕКУНДАХ с которым бот выполняет такие действия как:
                                       • инициализация отправки сообщений
                                       • инициализация отправки приглашений                                       
      
      'handle_new_user_timeout'   - периодичность В МИЛЛИСЕКУНДАХ с которой бот обрабатывает пользователей
                                    если необходимо пригласить N пользователей за сутки нужно взять
                                    количество миллисекунд в сутках и поделить на N
                                    тогда бот при нормальной работе за 24 часа работы пригласит N пользователей
                                    Пример:
                                    ( часы в сутках * минуты в часах * секунды в минутах * миллисекунды в секундах)
                                    24 * 60 * 60 * 1000
                                    таймаут для 50 пользователей в сутки:
                                    (24 * 60 * 60 * 1000)/50 = 1728000 миллисекунд (что равно 28.8 минутам)

      'thanksgiving_timeout'      - периодичность с которой бот проверяет БД на предмет новых пользвателей, которых
                                    нужно поблагодарить за вступление в группу
                                    !ВНИМАНИЕ: бот только проверяет состояние записи в БД, саму проверку факта
                                    вступления в группу осуществляет Хост-приложение                                  
      
      'groupId'                   - steamID64 группы, в которую необходимо приглашать пользователей
      'dbHost'
      'dbUser'
      'dbPassword'
      'dbDatabase'

  + Обрабатывать ситуацию, когда пользователь принимает приглашение и тут же удаляет бота
      friendState в БД остается .INVITED и через указанный timeout он будет приглашен снова
  
  + Обрабатывать ситуацию, когда Пользователь первым пишет сообщение
      chatState устанавливается в .USER_REPLIED и ему сразу отправляется приглашение в группу
  
  +	Обрабатывать удаление из друзей
      friendState устанавливается в .REMOVED. Если Пользователь не получал приглашения в группу, то
      через время он будет приглашен в друзья вновь
  
  +	Обрабатывать добавление в друзья в оффлайне
      chatState устанавливается .USER_REPLIED и затем Пользователь обрабатывается в методе handleUnfinishedFriends
  
  + Обрабатывать удаление из друзей в оффлайне
      friendState устанавливается в .REMOVED. Если Пользователь не получал приглашения в группу, то
      через время он будет приглашен в друзья вновь

  + Обрабатывать получение сообщений в оффлайне
      chatState устанавливается .USER_REPLIED и затем Пользователь обрабатывается в методе handleUnfinishedFriends
  
  + Обрабатывать уже добавленных ранее друзей
      Если пользователь уже находится в друзьях у бота, ему сразу отправляется приветственное сообщение

  + Циклически брать новых пользователей из базы и спамить им
  
  + получать chat_config по указанному пути и преобразовывать из xml в объект
  + использовать данные из chat_config в
    + sendHelloMessage
    + inviteToGroup
  + реализовать использование online_action_timeout с рандомным отклонением
  + реализовать использование repeat_invitation_timeout с рандомным отклонением
  + реализовать использование handle_new_user_timeout с рандомным отклонением

  миллисекунд в сутках 24 * 60 * 60 * 1000

  + переписать log() так, чтобы записи добавлялись в БД

  + отправлять пользователю сообщение "спасибо за вступление, ожидайте подарка"
    + строка в конфиге
    + функция sendThanks
      + использование строки из конфига

  - При возникновении события steamUser.on("steamGuard") сообщить Хост-приложению и ожидать кода в ответ (можно сразу cb передать)

  - помечать сообщения присылаемые польвателями в оффлайне как прочитанные

  - протестировать fix test hack  - спамить бота сообщениями

https://docs.google.com/document/d/1-ASu7p21uorPG_LunYBtck28_oFEutWFIgOuNjJa13s/edit
http://steamidfinder.com/lookup/76561198073408854/
https://nodejs.org/api/child_process.html#child_process_child_process_fork_modulepath_args_options
https://nodejs.org/api/child_process.html#child_process_class_childprocess

gridmaniacs 76561198015639477
vaunakiller 76561198073408854