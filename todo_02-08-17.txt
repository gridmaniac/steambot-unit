Таблица User, поля:

	steamID - идентификатор SteamID64
  groupId - идентификатор группы в которую нужно пригласить пользователя

	friendship state
		0 - приглашение не отправлено
		1 - приглашение отправлено
		2 - друг
		3 - приглашение отклонено
		4 - удалил из друзей

	chat state
		0 - сообщения не отправлялись
		1 - отправлено приветствие
		2 - получена реакция на приветствие		
		3 - отправлено приглашение / скинута ссылка на группу
		4 - отправлено сообщение "ожидайте подарка"

	group state
		0 - не в группе
		1 - состоит в группе

	send thanks state
		0 - подарок отправлять не нужно (пользователь еще не вступил в группу)
		1 - нужно поблагодарить и написать "Ожидайте подарка"
    2 - подарок отправлен
		
	botAccountName - имя бота, добавившего пользователя в друзья
	lastInvintationDate - дата отправки добавления пользователя в друзья

Хост-приложение
  - Инициализация новых записей в БД из файла 
      запись инициируется парой значений
         steamId - groupId

  - Запуск ботов с параметрами
    https://stackoverflow.com/questions/18862214/start-another-node-application-using-node-js
  
  - Передача Steam Guard кодов ботам

  - Проверка вступления приглашенных пользователей в группу
    - Проверять, кто вступил в группу
      - При запуске
      - каждые 24 часа https://www.npmjs.com/package/node-cron    
    - Устанавливать соответствующий groupState
    - Хранить группы с которыми работают боты в конфиге

  - SQL запросы для:
      удаления записей из таблицы User по дате добавления записи
      проверки приглашенных в группу
      проверки вступивших в группу
      получения логов
      
  - Завершать ботов при падении хоста
    https://stackoverflow.com/questions/5541288/detect-when-parent-process-exits

  - Писать в таблицу Logs основные события

Бот
  - Параметры запуска бота
    + Логин
    + Пароль
    + Почта
    + steamID64 группы в которую надо добавлять пользователей
    - Ссылка на .json/ .xml конфиг с фразами для общения с людьми
    + Количество времени, которое должно пройти с lastInvintationDate для повторного добавления

  ? Обрабатывать ситуацию, когда пользователь принимает приглашение и тут же удаляет бота,
     а бот все это время в оффлайне
  ? Обрабатывать ситуацию, когда Пользователь первым пишет сообщение
  +	Обрабатывать удаление из друзей
  +	Обрабатывать добавление в друзья в оффлайне
  + Обрабатывать удаление из друзей в оффлайне
      Если пользователю не отправлено приглашение в группу:
        - Привести в начальное состояние запись пользователя (кроме lastInvintationDate)
      Иначе
        + просто установить FriendState.REMOVED
  + Обрабатывать получение сообщений в оффлайне
    - устанавливать chatState для каждого пользователя в соответствующее состояние
  - Обрабатывать уже добавленных ранее друзей
  - Циклически брать новых пользователей из базы и спамить им  
  
  - При возникновении события steamUser.on("steamGuard") сообщить Хост-приложению и ожидать кода в ответ (можно сразу cb передать)
  - Вести лог событий в таблицу Logs
    - timestamp, botAccountName, message
Примечания
Разобраться как ронять процессы ботов запущенные ранее, из другого инстантса Хост-приложения

https://docs.google.com/document/d/1-ASu7p21uorPG_LunYBtck28_oFEutWFIgOuNjJa13s/edit
http://steamidfinder.com/lookup/76561198073408854/